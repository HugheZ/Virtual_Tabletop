# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'designer/MainWindow.ui'
#
# Created by: PyQt5 UI code generator 5.14.0
#
# WARNING! All changes made in this file will be lost!


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_VTTMainWindow(object):
    def setupUi(self, VTTMainWindow):
        VTTMainWindow.setObjectName("VTTMainWindow")
        VTTMainWindow.resize(600, 300)
        VTTMainWindow.setMinimumSize(QtCore.QSize(600, 300))
        self.centralwidget = QtWidgets.QWidget(VTTMainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName("gridLayout")
        self.gamesList = QtWidgets.QListWidget(self.centralwidget)
        self.gamesList.setFlow(QtWidgets.QListView.LeftToRight)
        self.gamesList.setProperty("isWrapping", True)
        self.gamesList.setResizeMode(QtWidgets.QListView.Adjust)
        self.gamesList.setGridSize(QtCore.QSize(250, 250))
        self.gamesList.setUniformItemSizes(True)
        self.gamesList.setItemAlignment(QtCore.Qt.AlignCenter)
        self.gamesList.setObjectName("gamesList")
        self.gridLayout.addWidget(self.gamesList, 1, 0, 1, 2)
        self.backButton = QtWidgets.QPushButton(self.centralwidget)
        self.backButton.setEnabled(False)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.backButton.sizePolicy().hasHeightForWidth())
        self.backButton.setSizePolicy(sizePolicy)
        self.backButton.setMaximumSize(QtCore.QSize(20, 16777215))
        self.backButton.setObjectName("backButton")
        self.gridLayout.addWidget(self.backButton, 0, 0, 1, 1)
        self.openGames = QtWidgets.QListWidget(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.openGames.sizePolicy().hasHeightForWidth())
        self.openGames.setSizePolicy(sizePolicy)
        self.openGames.setMaximumSize(QtCore.QSize(300, 16777215))
        self.openGames.setObjectName("openGames")
        self.gridLayout.addWidget(self.openGames, 0, 2, 2, 1)
        self.breadcrumbs = QtWidgets.QLabel(self.centralwidget)
        self.breadcrumbs.setObjectName("breadcrumbs")
        self.gridLayout.addWidget(self.breadcrumbs, 0, 1, 1, 1)
        VTTMainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(VTTMainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 600, 18))
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        self.menuNew = QtWidgets.QMenu(self.menuFile)
        self.menuNew.setObjectName("menuNew")
        self.menuStorage = QtWidgets.QMenu(self.menubar)
        self.menuStorage.setObjectName("menuStorage")
        self.menuSettings = QtWidgets.QMenu(self.menubar)
        self.menuSettings.setObjectName("menuSettings")
        VTTMainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(VTTMainWindow)
        self.statusbar.setObjectName("statusbar")
        VTTMainWindow.setStatusBar(self.statusbar)
        self.actionGame = QtWidgets.QAction(VTTMainWindow)
        self.actionGame.setObjectName("actionGame")
        self.actionGame_Collection = QtWidgets.QAction(VTTMainWindow)
        self.actionGame_Collection.setObjectName("actionGame_Collection")
        self.actionQuit = QtWidgets.QAction(VTTMainWindow)
        self.actionQuit.setObjectName("actionQuit")
        self.actionSet_Firebase = QtWidgets.QAction(VTTMainWindow)
        self.actionSet_Firebase.setObjectName("actionSet_Firebase")
        self.actionBackup_Local = QtWidgets.QAction(VTTMainWindow)
        self.actionBackup_Local.setObjectName("actionBackup_Local")
        self.actionWipe_Local = QtWidgets.QAction(VTTMainWindow)
        self.actionWipe_Local.setObjectName("actionWipe_Local")
        self.actionLogin = QtWidgets.QAction(VTTMainWindow)
        self.actionLogin.setObjectName("actionLogin")
        self.actionLog_in_preferences = QtWidgets.QAction(VTTMainWindow)
        self.actionLog_in_preferences.setObjectName("actionLog_in_preferences")
        self.menuNew.addAction(self.actionGame)
        self.menuNew.addAction(self.actionGame_Collection)
        self.menuFile.addAction(self.menuNew.menuAction())
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionQuit)
        self.menuStorage.addAction(self.actionSet_Firebase)
        self.menuStorage.addAction(self.actionLogin)
        self.menuSettings.addAction(self.actionLog_in_preferences)
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuStorage.menuAction())
        self.menubar.addAction(self.menuSettings.menuAction())

        self.retranslateUi(VTTMainWindow)
        QtCore.QMetaObject.connectSlotsByName(VTTMainWindow)

    def retranslateUi(self, VTTMainWindow):
        _translate = QtCore.QCoreApplication.translate
        VTTMainWindow.setWindowTitle(_translate("VTTMainWindow", "Virtual Tabletop"))
        self.gamesList.setToolTip(_translate("VTTMainWindow", "Available boards"))
        self.backButton.setText(_translate("VTTMainWindow", "â†‘"))
        self.openGames.setToolTip(_translate("VTTMainWindow", "Current boards"))
        self.breadcrumbs.setText(_translate("VTTMainWindow", ">"))
        self.menuFile.setTitle(_translate("VTTMainWindow", "File"))
        self.menuNew.setTitle(_translate("VTTMainWindow", "Add here..."))
        self.menuStorage.setTitle(_translate("VTTMainWindow", "Storage"))
        self.menuSettings.setTitle(_translate("VTTMainWindow", "Settings"))
        self.actionGame.setText(_translate("VTTMainWindow", "Game"))
        self.actionGame_Collection.setText(_translate("VTTMainWindow", "Game Collection"))
        self.actionQuit.setText(_translate("VTTMainWindow", "Quit"))
        self.actionSet_Firebase.setText(_translate("VTTMainWindow", "Set Firebase..."))
        self.actionSet_Firebase.setToolTip(_translate("VTTMainWindow", "Select Firebase API key"))
        self.actionSet_Firebase.setStatusTip(_translate("VTTMainWindow", "Select a Firebase API key from your local filesystem to link"))
        self.actionBackup_Local.setText(_translate("VTTMainWindow", "Backup Local"))
        self.actionWipe_Local.setText(_translate("VTTMainWindow", "Wipe Local"))
        self.actionLogin.setText(_translate("VTTMainWindow", "Log in..."))
        self.actionLog_in_preferences.setText(_translate("VTTMainWindow", "Preferences..."))
